entries:
  - name: from
    type: "image artifact"
    dependencies:
      - from
      - or from image id
      - or from artifact id
      - "actual digest from registry (if fromLatest: true)"
      - fromCacheVersion
      - mounts
    references:
      - name: "Base image"
        link: "https://werf.io/reference/build/base_image.html"
      - name: "Reducing image size and speeding up a build by mounts"
        link: "https://werf.io/reference/build/mount_directive.html"
    werf_config: |
      from: <image[:<tag>]>
      fromLatest: <bool>
      fromCacheVersion: <arbitrary string>
      fromImage: <image name>
      fromImageArtifact: <artifact name>
      mount:
      - from: build_dir
        to: <absolute path>
      - from: tmp_dir
        to: <absolute path>
      - fromPath: <absolute path>
        to: <absolute path>
  - name: beforeInstall
    type: "image artifact"
    dependencies:
      - beforeInstall bash commands or ansible tasks
      - cacheVersion
      - beforeInstallCacheVersion
    references:
      - name: "Running assembly instructions"
        link: "https://werf.io/reference/build/assembly_instructions.html"
    werf_config: |
      shell:
        beforeInstall:
        - <bash command>
        cacheVersion: <arbitrary string>
        beforeInstallCacheVersion: <arbitrary string>

      or

      ansible:
        beforeInstall:
        - <task>
        cacheVersion: <arbitrary string>
        beforeInstallCacheVersion: <arbitrary string>
  - name: importsBeforeInstall
    type: "image artifact"
    dependencies:
      - imports before install
    references:
      - name: "Importing from images and artifacts"
        link: "https://werf.io/reference/build/import_directive.html"
    werf_config: |
      import:
      - artifact: <artifact name>
        before: install
        add: <absolute path>
        to: <absolute path>
        owner: <owner>
        group: <group>
        includePaths:
        - <relative path or glob>
        excludePaths:
        - <relative path or glob>
  - name: gitArchive
    type: "image artifact"
    dependencies:
      - git mappings
    references:
      - name: "Adding source code from git repositories"
        link: "https://werf.io/reference/build/git_directive.html"
    werf_config: |
      git:
      - add: <absolute path>
        to: <absolute path>
        owner: <owner>
        group: <group>
        includePaths:
        - <relative path or glob>
        excludePaths:
        - <relative path or glob>
      - url: <git repo url>
        branch: <branch name>
        commit: <commit>
        tag: <tag>
        add: <absolute path>
        to: <absolute path>
        owner: <owner>
        group: <group>
        includePaths:
        - <relative path or glob>
        excludePaths:
        - <relative path or glob>
  - name: install
    type: "image artifact"
    dependencies:
      - install bash commands or ansible tasks
      - installCacheVersion
      - git files hashsum by install stageDependency
    references:
      - name: "Running assembly instructions"
        link: "https://werf.io/reference/build/assembly_instructions.html"
      - name: "Dependency on git repo changes"
        link: "https://werf.io/reference/build/assembly_instructions.html#dependency-on-git-repo-changes"
    werf_config: |
      git:
      - stageDependencies:
          install:
          - <relative path or glob>

      shell:
        install:
        - <bash command>
        installCacheVersion: <arbitrary string>

      or

      ansible:
        install:
        - <task>
        installCacheVersion: <arbitrary string>
  - name: importsAfterInstall
    type: "image artifact"
    dependencies:
      - imports after install
    werf_config: |
      import:
      - artifact: <artifact name>
        after: install
        add: <absolute path>
        to: <absolute path>
        owner: <owner>
        group: <group>
        includePaths:
        - <relative path or glob>
        excludePaths:
        - <relative path or glob>
    references:
      - name: "Importing from images and artifacts"
        link: "https://werf.io/reference/build/import_directive.html"
  - name: beforeSetup
    type: "image artifact"
    dependencies:
      - beforeSetup bash commands or ansible tasks
      - beforeSetupCacheVersion
      - git files hashsum by beforeSetup stageDependency
    references:
      - name: "Running assembly instructions"
        link: "https://werf.io/reference/build/assembly_instructions.html"
      - name: "Dependency on git repo changes"
        link: "https://werf.io/reference/build/assembly_instructions.html#dependency-on-git-repo-changes"
    werf_config: |
      git:
      - stageDependencies:
          beforeSetup:
          - <relative path or glob>

      shell:
        beforeSetup:
        - <bash command>
        beforeSetupCacheVersion: <arbitrary string>

      or

      ansible:
        beforeSetup:
        - <task>
        beforeSetupCacheVersion: <arbitrary string>
  - name: importsBeforeSetup
    type: "image artifact"
    dependencies:
      - imports before setup
    werf_config: |
      import:
      - artifact: <artifact name>
        before: setup
        add: <absolute path>
        to: <absolute path>
        owner: <owner>
        group: <group>
        includePaths:
        - <relative path or glob>
        excludePaths:
        - <relative path or glob>
    references:
      - name: "Importing from images and artifacts"
        link: "https://werf.io/reference/build/import_directive.html"
  - name: setup
    type: "image artifact"
    dependencies:
      - setup bash commands or ansible tasks
      - setupCacheVersion
      - git files hashsum by setup stageDependency
    references:
      - name: "Running assembly instructions"
        link: "https://werf.io/reference/build/assembly_instructions.html"
      - name: "Dependency on git repo changes"
        link: "https://werf.io/reference/build/assembly_instructions.html#dependency-on-git-repo-changes"
    werf_config: |
      git:
      - stageDependencies:
          setup:
          - <relative path or glob>

      shell:
        setup:
        - <bash command>
        setupCacheVersion: <arbitrary string>

      or

      ansible:
        setup:
        - <task>
        setupCacheVersion: <arbitrary string>
  - name: gitCache
    type: "image"
    dependencies:
      - size of git diff between last used commit and actual
    references:
      - name: "More details: gitArchive, gitCache, gitLatestPatch"
        link: "https://werf.io/reference/build/git_directive.html#more-details-gitarchive-gitcache-gitlatestpatch"
  - name: importsAfterSetup
    type: "image artifact"
    dependencies:
      - imports after setup
    werf_config: |
      import:
      - artifact: <artifact name>
        after: setup
        add: <absolute path>
        to: <absolute path>
        owner: <owner>
        group: <group>
        includePaths:
        - <relative path or glob>
        excludePaths:
        - <relative path or glob>
    references:
      - name: "Importing from images and artifacts"
        link: "https://werf.io/reference/build/import_directive.html"
  - name: gitLatestPatch
    type: "image"
    dependencies:
      - presence of git diff changes between last used commit and actual
    references:
      - name: "More details: gitArchive, gitCache, gitLatestPatch"
        link: "https://werf.io/reference/build/git_directive.html#more-details-gitarchive-gitcache-gitlatestpatch"
  - name: dockerInstructions
    type: "image"
    dependencies:
      - docker instructions
    references:
      - name: Adding docker instructions
        link: "https://werf.io/reference/build/docker_directive.html"
    werf_config: |
      docker:
        VOLUME:
        - <volume>
        EXPOSE:
        - <expose>
        ENV:
          <env name>: <env value>
        LABEL:
          <label name>: <label value>
        ENTRYPOINT:
        - <entrypoint>
        CMD:
        - <cmd>
        ONBUILD:
        - <onbuild>
        WORKDIR: <workdir>
        USER: <user>
        STOPSIGNAL: <stopsignal>
        HEALTHCHECK: <healthcheck>